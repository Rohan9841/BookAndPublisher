package com.example.demo.serviceImpl;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.demo.dto.PublisherDTO;
import com.example.demo.model.Publisher;
import com.example.demo.repositories.PublisherRepository;
import com.example.demo.service.PublisherService;

@Service("publisherService")
public class PublisherServiceImpl implements PublisherService {

	@Autowired
	PublisherRepository publisherRepo;

	@Autowired
	PublisherDTO publisherDTO;
	
	@Override
	public List<Publisher> findAllPublishers() {
		List<Publisher> publishers = publisherRepo.findAll();
		return (publishers.isEmpty() ? null : publishers);
	}

	@Override
	public PublisherDTO save(Publisher publisher) {
		Publisher publisher1 = publisherRepo.save(publisher);
		
		publisherDTO.setName(publisher1.getName());
		publisherDTO.setAddressLine(publisher1.getAddressLine());
		publisherDTO.setCity(publisher1.getCity());
		publisherDTO.setState(publisher1.getState());
		publisherDTO.setZip(publisher1.getZip());
		
		return publisherDTO;
	}

	@Override
	public Publisher findById(Long id) {
		Optional<Publisher> optPublisher = publisherRepo.findById(id);
		return (optPublisher.isPresent() ? optPublisher.get() : null);
	}
	
	PublisherDTO convertPublisherToDTO(Publisher publisher) {
		publisherDTO.setName(publisher.getName());
		publisherDTO.setAddressLine(publisher.getAddressLine());
		publisherDTO.setCity(publisher.getCity());
		publisherDTO.setState(publisher.getState());
		publisherDTO.setZip(publisher.getZip());
	}

}
